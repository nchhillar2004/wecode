{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to WeCode For source code visit github.com/nchhillar2004/wecode . Use this project git clone https://github.com/nchhillar2004/wecode.git - Clone the repository from GitHub cd wecode - Open the project cd app && npm i - Install dependencies chmod +x run.sh - Make the script executable (run this in root dir) ./run.sh - Run the project Project layout app/ # Preact frontend node_modules public src # frontend source code config/ # global config files core/ # Java spring boot backend (core) src # backend source code target docs/ # docs using mkdocs docs go-server/ # golang server for performance critical tasks cmd # main.go entry point for go-server internal # business logic go.sum # manage go dependencies For more information view specific docs: app , core , go-server ,","title":"Home"},{"location":"#welcome-to-wecode","text":"For source code visit github.com/nchhillar2004/wecode .","title":"Welcome to WeCode"},{"location":"#use-this-project","text":"git clone https://github.com/nchhillar2004/wecode.git - Clone the repository from GitHub cd wecode - Open the project cd app && npm i - Install dependencies chmod +x run.sh - Make the script executable (run this in root dir) ./run.sh - Run the project","title":"Use this project"},{"location":"#project-layout","text":"app/ # Preact frontend node_modules public src # frontend source code config/ # global config files core/ # Java spring boot backend (core) src # backend source code target docs/ # docs using mkdocs docs go-server/ # golang server for performance critical tasks cmd # main.go entry point for go-server internal # business logic go.sum # manage go dependencies For more information view specific docs: app , core , go-server ,","title":"Project layout"},{"location":"about/","text":"About me Nishant Chhillar","title":"About"},{"location":"about/#about-me","text":"Nishant Chhillar","title":"About me"},{"location":"api/","text":"API Docs comming soon","title":"API"},{"location":"api/#api-docs","text":"comming soon","title":"API Docs"},{"location":"app/","text":"Preact App + TypeScript WeCode's frontend is designed to be lightweight, fast, and scalable, ensuring a seamless user experience. By using Preact, we achieve high performance with a minimal bundle size, making our application more efficient. TypeScript enhances the development process by providing type safety, reducing errors, and improving maintainability. The frontend is built with modern tools, ensuring faster development. Note : Our focus is on performance and functionality over UI design, so the site's appearance may not appeal to everyone. WeCode's frontend is build using: Preact.js - A fast and lightweight alternative to React.js TypeScript - A strongly typed & safer alternative to JavaScript TailwindCSS - CSS framework for rapid UI development Vite - A fast and modern frontend build tool App structure app/ index.html package.json public src/ # app.tsx # Defines all routes/ pages components/ # commons/ # common components (buttons, forms, etc...) ToggleTheme.tsx # Toggle theme button GlobalFooter.tsx GlobalHeader.tsx Notification.tsx context/ AuthContextProvider.tsx # auth context (isAuthenticated) ThemeContextProvider.tsx # Theme context index.css # the ONLY css file main.tsx # tsx entry point routes/ # All routes/ pages AboutRoute.tsx # About us page auth/ AuthIndex.tsx # Auth index/ default page, redirecting to /login, /register OR / (home) AuthLayout.tsx # Auth layout LoginRoute.tsx # Login/ Sign in page RegisterRoute.tsx # Register/ Sign up page challenges/ ChallengesLayout.tsx # /challenges layout ChallengesList.tsx # List all challenges/ questions, with pagination, default route for /challenges QuestionRoute.tsx # Specific questions route, takes one param (quesId) ErrorRoute.tsx # Default route for error, page not found, wrong route, etc... GlobalLayout.tsx # Global layout for: home, about, challanges, servers, etc... pages home/ HomeRoute.tsx # Home page default route vite-env.d.ts tsconfig.app.json tsconfig.json tsconfig.node.json vite.config.ts","title":"App"},{"location":"app/#preact-app-typescript","text":"WeCode's frontend is designed to be lightweight, fast, and scalable, ensuring a seamless user experience. By using Preact, we achieve high performance with a minimal bundle size, making our application more efficient. TypeScript enhances the development process by providing type safety, reducing errors, and improving maintainability. The frontend is built with modern tools, ensuring faster development. Note : Our focus is on performance and functionality over UI design, so the site's appearance may not appeal to everyone.","title":"Preact App + TypeScript"},{"location":"app/#wecodes-frontend-is-build-using","text":"Preact.js - A fast and lightweight alternative to React.js TypeScript - A strongly typed & safer alternative to JavaScript TailwindCSS - CSS framework for rapid UI development Vite - A fast and modern frontend build tool","title":"WeCode's frontend is build using:"},{"location":"app/#app-structure","text":"app/ index.html package.json public src/ # app.tsx # Defines all routes/ pages components/ # commons/ # common components (buttons, forms, etc...) ToggleTheme.tsx # Toggle theme button GlobalFooter.tsx GlobalHeader.tsx Notification.tsx context/ AuthContextProvider.tsx # auth context (isAuthenticated) ThemeContextProvider.tsx # Theme context index.css # the ONLY css file main.tsx # tsx entry point routes/ # All routes/ pages AboutRoute.tsx # About us page auth/ AuthIndex.tsx # Auth index/ default page, redirecting to /login, /register OR / (home) AuthLayout.tsx # Auth layout LoginRoute.tsx # Login/ Sign in page RegisterRoute.tsx # Register/ Sign up page challenges/ ChallengesLayout.tsx # /challenges layout ChallengesList.tsx # List all challenges/ questions, with pagination, default route for /challenges QuestionRoute.tsx # Specific questions route, takes one param (quesId) ErrorRoute.tsx # Default route for error, page not found, wrong route, etc... GlobalLayout.tsx # Global layout for: home, about, challanges, servers, etc... pages home/ HomeRoute.tsx # Home page default route vite-env.d.ts tsconfig.app.json tsconfig.json tsconfig.node.json vite.config.ts","title":"App structure"},{"location":"core/","text":"Java spring boot (Core) comming soon","title":"Core"},{"location":"core/#java-spring-boot-core","text":"comming soon","title":"Java spring boot (Core)"},{"location":"go-server/","text":"Go-lang Server comming soon","title":"Go-server"},{"location":"go-server/#go-lang-server","text":"comming soon","title":"Go-lang Server"}]}